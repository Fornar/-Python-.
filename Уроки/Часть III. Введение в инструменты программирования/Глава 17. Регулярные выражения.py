# Можно использовать регулярные выражения Python при помощи встроенной библиотеки re (regular expressions - регулярные выражения)
# В модуле re есть метод findall.
# В качестве параметров в него передаётся регулярное выражение, затем строка, и он созвращает список со всеми элементами
# в строке, которые совпадают с шаблоном
import re
l = "Красивое лучше, чем уродливое"
print(re.findall("Красивое", l))

# Чтобы не учитывать регистр в методе findall, нужно передать re.IGNORECASE в качестве третьего параметра.
print(re.findall("луЧше", l, re.IGNORECASE))

#_________________________________________________________________________________________________________________________________
# Совпадение в начале и в конце
zen = """Хотя никогда зачастую лучше, чем прямо сейчас.
Если реализацию сложно объяснить - идея плоха.
Если реализацию легко объснить - идея, возможно, хороша.
Пространства имён - отличная штука! Будет делать их побольше!
"""

print(re.findall("^Если",   # (^) - символ регулярного выражения, который ищет шаблон, только если он встречается в начале строки.
                 zen,
                 re.MULTILINE)) # Нужно, чтобы искать совпадения во всех строках многострочного экрана.

#_________________________________________________________________________________________________________________________________
# Поиск совпадений с несколькими символами
string = "Два даа дваа."
print(re.findall("д[ва]а", # получается вывод: два, даа, два т.к. выбирается что-то по принципу "либо то, либо это" (не одновременно)
                 string,
                 re.IGNORECASE)) # Игнор регистра

#_________________________________________________________________________________________________________________________________
# Совпадение цифр
# С помощью символа \d можно искать совпадения цифр.
line = "123?34 привет?"
print(re.findall("\d", line, re.IGNORECASE))

#_________________________________________________________________________________________________________________________________
# Повторение
# Не всегда нужно искать шаблоны жадным образом.
# Чтобы сделать выражение нежадным, можно указать после звёздочки (*) вопросительный знак
t = "__один__ __два__ __три__четыре__"
print(re.findall("__.*?__", t))
# Для команды grep недоступен нежадный поиск, но в Python для этого можно использовать вопросительный знак.
found = re.findall("__.*?__", t)
for match in found:
    print(match)

print('С помощью "нежадного" поиска на Python можно создаь игру "Чепуха"(игра, где игроку предлагается вставить\
пропущенные в абзаце текса слова')
print('В файле "Глава 17. Чепуха.py" есть игра, про которую тут говорится.')

#_________________________________________________________________________________________________________________________________
# Управляющие символы
line = "Я люблю $"
print(re.findall("\\$", # Пока хз зачем два обратых слэша, но вообще можно обойтись и одним...
                 line,
                 re.IGNORECASE))
